{"version":3,"sources":["App.js","index.js"],"names":["App","useState","textInput","setTextInput","conversionMode","setConversionMode","textOutput","setTextOutput","handleRadioChange","event","target","value","className","onSubmit","preventDefault","toLowerCase","toUpperCase","htmlFor","id","onChange","type","name","checked","ReactDOM","render","basename","process","document","getElementById"],"mappings":"+PA0EeA,MAvEf,WAAgB,IAAD,EACqBC,mBAAS,8BAD9B,mBACNC,EADM,KACKC,EADL,OAE+BF,mBAAS,aAFxC,mBAENG,EAFM,KAEUC,EAFV,OAGuBJ,mBAAS,IAHhC,mBAGNK,EAHM,KAGMC,EAHN,KAKPC,EAAoB,SAAAC,GACxBJ,EAAkBI,EAAMC,OAAOC,QAmBjC,OACE,sBAAKC,UAAU,MAAf,UACE,iCACE,kEAEA,uBAAMC,SAjBS,SAAAJ,GACnBA,EAAMK,iBAEiB,cAAnBV,EACFG,EAAcL,EAAUa,eAEI,cAAnBX,GACTG,EAAcL,EAAUc,gBAUtB,UACE,sBAAKJ,UAAU,kCAAf,UACE,uBAAOK,QAAQ,OAAf,mCACA,0BACEC,GAAG,OACHC,SA1BiB,SAAAV,GAC3BN,EAAaM,EAAMC,OAAOC,QA0BhBA,MAAOT,OAGX,sBAAKU,UAAU,mCAAf,UACE,uBACEQ,KAAK,QACLC,KAAK,aACLH,GAAG,eACHP,MAAM,YACNW,QAA4B,cAAnBlB,EACTe,SAAUX,IAEZ,uBAAOS,QAAQ,eAAf,0CAEF,sBAAKL,UAAU,mCAAf,UACE,uBACEQ,KAAK,QACLC,KAAK,aACLH,GAAG,eACHP,MAAM,YACNW,QAA4B,cAAnBlB,EACTe,SAAUX,IAEZ,uBAAOS,QAAQ,eAAf,0CAEF,uBAAOG,KAAK,SAAST,MAAM,WAC3B,sBAAKC,UAAU,iDAAf,UACE,uBAAOK,QAAQ,SAAf,6BACA,wBAAQC,GAAG,SAAX,SAAqBZ,cC7DjCiB,IAASC,OACP,cAAC,IAAD,CAAeC,SAAUC,sBAAzB,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e6e07f95.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from \"react\";\n\nfunction App() {\n  const [textInput, setTextInput] = useState('Here is some example text.');\n  const [conversionMode, setConversionMode] = useState('lowercase');\n  const [textOutput, setTextOutput] = useState('');\n\n  const handleRadioChange = event => {\n    setConversionMode(event.target.value);\n  }\n\n  const handleTextareaChange = event => {\n    setTextInput(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (conversionMode === 'lowercase') {\n      setTextOutput(textInput.toLowerCase());\n\n    } else if (conversionMode === 'uppercase') {\n      setTextOutput(textInput.toUpperCase());\n\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Career Lab text-case converter</h1>\n      </header>\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-control form-control__text\">\n            <label htmlFor=\"text\">Text to be converted:</label>\n            <textarea\n              id=\"text\"\n              onChange={handleTextareaChange}\n              value={textInput}\n            />\n          </div>\n          <div className=\"form-control form-control__radio\">\n            <input\n              type=\"radio\"\n              name=\"conversion\"\n              id=\"conversion-0\"\n              value=\"lowercase\"\n              checked={conversionMode === \"lowercase\"}\n              onChange={handleRadioChange}\n            />\n            <label htmlFor=\"conversion-0\">Convert text to lowercase</label>\n          </div>\n          <div className=\"form-control form-control__radio\">\n            <input\n              type=\"radio\"\n              name=\"conversion\"\n              id=\"conversion-1\"\n              value=\"uppercase\"\n              checked={conversionMode === \"uppercase\"}\n              onChange={handleRadioChange}\n            />\n            <label htmlFor=\"conversion-1\">Convert text to uppercase</label>\n          </div>\n          <input type=\"submit\" value=\"Submit\" />\n          <div className=\"result-wrapper form-control form-control__text\">\n            <label htmlFor=\"result\">Converted text:</label>\n            <output id=\"result\">{textOutput}</output>\n          </div>\n        </form>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport BrowserRouter from 'react-router-dom/BrowserRouter';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}